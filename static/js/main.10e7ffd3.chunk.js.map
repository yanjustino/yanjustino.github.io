{"version":3,"sources":["application/MobileDetect.tsx","application/Themes.tsx","application/Auth.ts","serviceWorker.ts","components/Main.tsx","index.tsx"],"names":["MobileDetect","Android","navigator","userAgent","match","BlackBerry","iOS","Opera","Windows","Any","test","substr","Themes","theme","createMuiTheme","palette","primary","main","contrastText","secondary","info","dark","light","error","warning","success","divider","Auth","this","getToken","json","sessionStorage","getItem","JSON","parse","user","setItem","stringify","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","Home","React","Page404","UserCreate","UserActivated","Login","Dashboard","TeamCreate","TeamEdit","TeamList","TeamDetail","PrivateRoute","params","component","rest","Component","render","props","isAuthenticated","to","pathname","withRouter","fallback","exact","path","css","mobile","container","height","width","overflow","padding","desktop","MobileContainer","Container","style","maxWidth","DesktopContainer","ReactDOM","ThemeProvider","basename","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.10e7ffd3.chunk.js","sourcesContent":["export default class MobileDetect {\r\n    static Android = () => \r\n        navigator.userAgent.match(/Android/i);\r\n    \r\n    static BlackBerry = () =>\r\n        navigator.userAgent.match(/BlackBerry/i);\r\n    \r\n    static iOS = () => \r\n        navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n    \r\n    static Opera = () =>\r\n        navigator.userAgent.match(/Opera Mini/i);\r\n    \r\n    static Windows = () => \r\n        navigator.userAgent.match(/IEMobile/i);\r\n    \r\n    static Any = () => \r\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series([46])0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\r\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br([ev])w|bumb|bw-([nu])|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do([cp])o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly([-_])|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-([mpt])|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c([- _agpst])|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac([ \\-/])|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja([tv])a|jbro|jemu|jigs|kddi|keji|kgt([ /])|klon|kpt |kwc-|kyo([ck])|le(no|xi)|lg( g|\\/([klu])|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t([- ov])|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30([02])|n50([025])|n7(0([01])|10)|ne(([cm])-|on|tf|wf|wg|wt)|nok([6i])|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan([adt])|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c([-01])|47|mc|nd|ri)|sgh-|shar|sie([-m])|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel([im])|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c([- ])|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(navigator.userAgent.substr(0, 4));\r\n};","import React from 'react';\r\nimport {createMuiTheme} from '@material-ui/core';\r\n\r\nexport default class Themes {\r\n\r\n    static theme = createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                main: '#20a4f3',\r\n                contrastText: '#FFFFFF',\r\n            },\r\n            secondary: {\r\n                main: '#f77f00',\r\n            },\r\n            info: {\r\n                main: '#2196F3',\r\n                dark: '#0B79D0',\r\n                light: '#64B6F7',\r\n                contrastText: '#FFFFFF'\r\n            },\r\n            error: {\r\n                main: '#F44336',\r\n                dark: '#E31B0C',\r\n                light: '#F88078',\r\n                contrastText: '#FFFFFF',\r\n            },\r\n            warning:{\r\n                main: '#FF9800',\r\n                dark: '#C77700',\r\n                light: '#FFB547',\r\n                contrastText: 'rgba(0,0,0,87)',\r\n            },\r\n            success:{\r\n                main: '#4CAF50',\r\n                dark: '#3B873E',\r\n                light: '#7BC67E',\r\n                contrastText: 'rgba(0,0,0,87)',\r\n            },\r\n            divider: 'rgba(0, 0, 0, 0.12)',\r\n        },\r\n    });    \r\n\r\n    static error = createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                main: '#F44336',\r\n                dark: '#E31B0C',\r\n                light: '#F88078',\r\n                contrastText: '#FFFFFF',\r\n            },\r\n            secondary:{\r\n                main: '#F6044336',\r\n                dark: '#E31B0C',\r\n                light: '#F8807880',\r\n                contrastText: '#E6031B0C',\r\n            },\r\n            divider: '#F6044336'\r\n        },\r\n    });\r\n}","export default class Auth {\n    static async isAuthenticated(): Promise<boolean> {\n        return await this.getToken() !== '';\n    }\n    \n    static async getToken(): Promise<string> {\n        let json = sessionStorage.getItem('user')\n        return json ? JSON.parse(json) : '';\n    }\n    \n    static async register(user: any){\n        sessionStorage.setItem('user', JSON.stringify(user))\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // 'Content is cached for offline use.' message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from 'react';\nimport { Switch, Route, withRouter, Redirect } from 'react-router-dom';\nimport Auth from '../application/Auth';\nimport {LazyExoticComponent} from 'react';\n\nconst Home = React.lazy(() => import('./home/Home'))\nconst Page404 = React.lazy(() => import('./home/Page404'))\nconst UserCreate = React.lazy(() => import('./users/views/UserCreate'))\nconst UserActivated = React.lazy(() => import('./users/views/UserActivated'))\nconst Login = React.lazy(() => import('./users/views/Login'))\nconst Dashboard = React.lazy(() => import('./dashboard/views/Index'))\n\nconst TeamCreate = React.lazy(() => import('./teams/views/TeamCreate'))\nconst TeamEdit = React.lazy(() => import('./teams/views/TeamEdit'))\nconst TeamList = React.lazy(() => import('./teams/views/TeamList'))\nconst TeamDetail = React.lazy(() => import('./teams/views/TeamDetail'))\n\nconst renderLoader = () => {\n    return <p>aguarde...</p>\n};\n\n//Criação de rotas privadas que redirecionam o usuário caso não esteja autorizado.\n\nconst PrivateRoute = (params: any) => {\n    let { component, ...rest } = params;\n\n    const Component = component as LazyExoticComponent<any>;\n\n    return (\n        <Route\n            {...rest}\n            render={ (props) =>  \n                Auth.isAuthenticated()\n                    ? <Component {...props} />\n                    : <Redirect to={{ pathname: '/app' }} />\n\n            }\n        />\n    );\n};\n\nconst Main = () => (\n    <React.Suspense fallback={renderLoader()}>\n        <Switch >\n            <Route exact path='/' component={Dashboard} />\n            <Route exact path='/app' component={Login} />\n            <Route exact path='/home' component={Home} />\n            <Route exact path='/login' component={Login} />\n            <Route exact path='/user/create' component={UserCreate} />\n            <Route exact path='/user/activated' component={UserActivated} />\n            <PrivateRoute exact path='/admin' component={Dashboard} />\n            <PrivateRoute exact path='/team' component={TeamList} />\n            <PrivateRoute exact path='/team/create' component={TeamCreate} />\n            <PrivateRoute exact path='/team/edit' component={TeamEdit} />\n            <PrivateRoute exact path='/team/detail' component={TeamDetail} />\n            <Route path='*' component={Page404} />\n        </Switch>\n    </React.Suspense>\n);\n\nexport default withRouter(Main);\n","import React, {CSSProperties} from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Main from './components/Main';\nimport './index.css'\nimport {Container, createMuiTheme, ThemeProvider} from '@material-ui/core';\nimport Themes from './application/Themes';\nimport MobileDetect from './application/MobileDetect';\n\n\nconst css = {\n    mobile: {\n        container: {\n            height: '100%',\n            width: '100%',\n            overflow: 'hidden',\n            padding: 0,\n        } as CSSProperties,\n    },\n    desktop:{\n        container: {\n            overflow: 'hidden',\n            height: '100%',\n            width: '100%',\n            padding: 0,\n        } as CSSProperties,\n    }\n}\n\nconst MobileContainer =\n    <Container style={css.mobile.container} maxWidth='xl'>\n        <Main/>\n    </Container>\n\nconst DesktopContainer =\n    <Container style={css.desktop.container} maxWidth='xl'>\n        <Main/>\n    </Container>\n\nReactDOM.render(\n    <ThemeProvider theme={Themes.theme}>\n        <BrowserRouter basename='https://yanjustino.github.io'>\n            {MobileDetect.Any() ? MobileContainer : DesktopContainer}\n        </BrowserRouter>\n    </ThemeProvider>,\n    document.getElementById('root')\n);\n\n\nserviceWorker.register();\n"],"sourceRoot":""}